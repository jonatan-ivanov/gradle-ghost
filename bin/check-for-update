#! /bin/bash

set -e

GRADLE_GHOST_HOME=${GRADLE_GHOST_HOME:-~/.gradle-ghost}
LAST_UPDATED_FILE=$GRADLE_GHOST_HOME/.last-updated

CHECK_THRESHOLD_DAYS=3
NOW=$(date +%s)
EPOCH_DAYS=$((NOW / 60 / 60 / 24))

function regenerate-update-file() {
    echo "LAST_UPDATED=${LAST_UPDATED:-$NOW}" > "$LAST_UPDATED_FILE"
    echo "LAST_CHECKED=$NOW" >> "$LAST_UPDATED_FILE"
}

function version-mismatch() {
    git -C "$GRADLE_GHOST_HOME" fetch
    GRADLE_GHOST_REMOTE_VERSION=$(git -C "$GRADLE_GHOST_HOME" rev-parse --short origin/HEAD)
    GRADLE_GHOST_LOCAL_VERSION=$(git -C "$GRADLE_GHOST_HOME" rev-parse --short HEAD)

    if [ "$GRADLE_GHOST_REMOTE_VERSION" != "$GRADLE_GHOST_LOCAL_VERSION" ]; then true; else false; fi
}

function update-ghost() {
    read -r -p 'Do you want to update Gradle Ghost? [y/N] ' confirmation
    if [ "$confirmation" == 'y' ] || [ "$confirmation" == 'Y' ]; then
        "$GRADLE_GHOST_HOME/bin/update"
    else
        regenerate-update-file
    fi
}

if [ -f "$LAST_UPDATED_FILE" ]; then
    # shellcheck source=/dev/null
    source "$LAST_UPDATED_FILE"
    if [ -z "$LAST_UPDATED" ] || [ -z "$LAST_CHECKED" ]; then
        update-ghost
    else
        LAST_CHECKED_EPOCH_DAYS=$((LAST_CHECKED / 60 / 60 / 24))
        LAST_CHECKED_DAYS_DIFF=$((EPOCH_DAYS - LAST_CHECKED_EPOCH_DAYS))

        if [ $LAST_CHECKED_DAYS_DIFF -ge $CHECK_THRESHOLD_DAYS ]; then
            regenerate-update-file
            version-mismatch && update-ghost
        fi
    fi
else
    update-ghost
fi
